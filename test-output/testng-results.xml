<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteAllTest" duration-ms="35368" started-at="2018-12-28T15:24:30Z" finished-at="2018-12-28T15:25:05Z">
    <groups>
    </groups>
    <test name="TestLoginValidData" duration-ms="12895" started-at="2018-12-28T15:24:30Z" finished-at="2018-12-28T15:24:43Z">
      <class name="testCases.Login_valid_data_Tests">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testCases.Login_valid_data_Tests@4c371370]" name="setUp" is-config="true" duration-ms="8309" started-at="2018-12-28T15:24:30Z" finished-at="2018-12-28T15:24:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="login_With_Valid_Data()[pri:1, instance:testCases.Login_valid_data_Tests@4c371370]" name="login_With_Valid_Data" duration-ms="2213" started-at="2018-12-28T15:24:38Z" finished-at="2018-12-28T15:24:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[le lbellé est erroné expected [Welcome Admin.] but found [Welcome Admin]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: le lbellé est erroné expected [Welcome Admin.] but found [Welcome Admin]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at testCases.Login_valid_data_Tests.login_With_Valid_Data(Login_valid_data_Tests.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login_With_Valid_Data -->
        <test-method status="PASS" signature="logout()[pri:2, instance:testCases.Login_valid_data_Tests@4c371370]" name="logout" duration-ms="843" started-at="2018-12-28T15:24:41Z" finished-at="2018-12-28T15:24:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logout -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testCases.Login_valid_data_Tests@4c371370]" name="tearDown" is-config="true" duration-ms="959" started-at="2018-12-28T15:24:42Z" finished-at="2018-12-28T15:24:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.Login_valid_data_Tests -->
    </test> <!-- TestLoginValidData -->
    <test name="TestLoginInvalidData" duration-ms="22398" started-at="2018-12-28T15:24:43Z" finished-at="2018-12-28T15:25:05Z">
      <class name="testCases.Login_Invalid_data_Tests">
        <test-method status="PASS" signature="setUp()[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="setUp" is-config="true" duration-ms="6583" started-at="2018-12-28T15:24:43Z" finished-at="2018-12-28T15:24:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="loginInvalidData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="loginInvalidData" duration-ms="1763" started-at="2018-12-28T15:24:51Z" data-provider="dp" finished-at="2018-12-28T15:24:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Username cannot be empty]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginInvalidData -->
        <test-method status="PASS" signature="loginInvalidData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="loginInvalidData" duration-ms="1697" started-at="2018-12-28T15:24:53Z" data-provider="dp" finished-at="2018-12-28T15:24:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Username cannot be empty]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginInvalidData -->
        <test-method status="PASS" signature="loginInvalidData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="loginInvalidData" duration-ms="1607" started-at="2018-12-28T15:24:55Z" data-provider="dp" finished-at="2018-12-28T15:24:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Password cannot be empty]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginInvalidData -->
        <test-method status="PASS" signature="loginInvalidData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="loginInvalidData" duration-ms="2123" started-at="2018-12-28T15:24:56Z" data-provider="dp" finished-at="2018-12-28T15:24:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid credentials]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginInvalidData -->
        <test-method status="PASS" signature="loginInvalidData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="loginInvalidData" duration-ms="2580" started-at="2018-12-28T15:24:58Z" data-provider="dp" finished-at="2018-12-28T15:25:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid credentials]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginInvalidData -->
        <test-method status="PASS" signature="loginInvalidData(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="loginInvalidData" duration-ms="2963" started-at="2018-12-28T15:25:01Z" data-provider="dp" finished-at="2018-12-28T15:25:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin1234]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Invalid credentials]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginInvalidData -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testCases.Login_Invalid_data_Tests@78691363]" name="tearDown" is-config="true" duration-ms="976" started-at="2018-12-28T15:25:04Z" finished-at="2018-12-28T15:25:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testCases.Login_Invalid_data_Tests -->
    </test> <!-- TestLoginInvalidData -->
  </suite> <!-- SuiteAllTest -->
</testng-results>
